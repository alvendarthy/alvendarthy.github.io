[{"title":"The general architecture of postgreSQL","url":"/2021/04/04/The-general-architecture-of-postgreSQL/","content":"A general viewPostgreSQL is the most advantaged Relation Database Management System around the world. It’s a huge system with many complex features. To under the internal mechanism of PostgreSQL must be a chanlange. Let’s start from something much easy to get a whole picture of the system.\nIn this post, I will explain:\n\nhow PostgreSQL works;\nthe process architecture;\nthe system layers;\n\nPostgrepSQL works as multi-processes: 1 master process, several helper process and worker processes respective to every client.\n\nAll processes are all single thread. If you know some services use async io such as nginx and reds, which are epoll driven on linux implementation, that PostgreSQL use multi-process must be out of your mind. Actially, this makes sence, for PostgreSQL is havey on both disk IO and computing, it might take a long time to finish just one query, async io do not allow one job takes such long time or other users be affected.\nWhen a client comes, the master process (named as “postgres”) just accept the connection and produce a new socket corresponding. Then the master process call Linux fork() to create a new worker process, which serves this client only. And the worker process quits whenever some error occurs or the client close the connection.\nAll worker processes, helper processes like BGWriter, Vacuum, Logger, access to the Database files concurrently. In this context of PostgreSQL we call the databases as DB cluster, and we call the tables as relations.\n","categories":["PostgreSQL"],"tags":["DB"]}]